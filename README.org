* Dependencies
#+begin_src sh :tangle yes
pip install watchdog
#+end_src
* Managing Playlists / m3u8 files
** Convert .flac extensions to m4a
#+begin_src sh :tangle yes
  --m3u_flac_ext_to_alac # Default = False
#+end_src

*** Example
# In some playlist.m3u...
#+begin_src text :tangle yes
  X:\music\Pop\Taylor Swift\Lover\08 Paper Rings.flac

  to:

  X:\music\Pop\Taylor Swift\Lover\08 Paper Rings.m4a
#+end_src

** Convert Windows paths to Posix (Linux/OSX) paths
#+begin_src sh :tangle yes
  --m3u_windows_to_posix # Default = False
#+end_src

*** Example
#+begin_src text :tangle yes
  X:\music\K-Pop\BTS\Butter\01 Butter.m4a

  to:

  X:/music/K-Pop/BTS/Butter/01 Butter.m4a
#+end_src

** Convert common text in every line in Playlist
This is useful for changing drive paths or changing root directories from
Windows to OSX, etc.

#+begin_src sh :tangle yes
  --m3u_from_str
  --m3u_to_str
#+end_src
*** Example

#+begin_src text :tangle yes
  --m3u_from_str=X:/music
  --m3u_to_str=/Users/james/Music

    X:/music/K-Pop/IU/Love poem/03 Blueming.m4a

  to:

    /Users/james/Music/K-Pop/IU/Love poem/03 Blueming.m4a
#+end_src
** Watching directory for changes
#+begin_src sh :tangle yes
--m3u_watch
#+end_src
** Using every flag

#+begin_src sh :tangle yes
python foo_tunes.py \
-m3u_i=/Volumes/bebe/playlists/windows \
-m3u_o=/Volumes/bebe/playlists/osx \
--m3u_flac_to_alac \
--m3u_windows_to_posix \
--m3u_from_str='X:/music' \
--m3u_to_str='/Users/james/Music' \
--m3u_watch \
--verbose
#+end_src

#+begin_src text :tangle yes
  X:\music\J-Pop\Utada Hikaru\Distance\01 Wait & See.mp3

  to:

 /Users/james/Music/J-Pop/Utada Hikaru/Distance/01 Wait & See.mp3
#+end_src

* Convert Flac to Alac
#+begin_src sh :tangle yes
./foo_tunes.py --flac_dir=~/some-dir-with-flac-files --verbose
#+end_src
** Options:
#+begin_src sh :tangle yes
--flac_dir # Default = None
--flac_overwrite_output # Default = False
--flac_delete_original # Default = False
--flac_convert_threads # Default = 4
--flac_watch
#+end_src

** Watching directory for changes
#+begin_src sh :tangle yes
--flac_watch
#+end_src
* Run
** Write to output dir
#+begin_src sh :tangle yes
  python foo_tunes.py -i=/Volumes/drive/playlists/windows --verbose -o=temp  --flac_ext_to_alac
#+end_src

#+begin_src sh :tangle yes
  ./foo_tunes.py -i=/Volumes/bebe/playlists/windows --verbose -o=temp2  --flac_ext_to_alac
#+end_src

** To overwrite files
#+begin_src sh :tangle yes
  ./foo_tunes.py -i=/Volumes/bebe/playlists/windows --verbose  --flac_ext_to_alac
#+end_src

** Change some text in every line
#+begin_src sh :tangle yes
  ./foo_tunes.py -i=/Volumes/bebe/playlists/windows/ --from_str='X:\music' --to_str='Y:\music'
#+end_src

** Random commands
#+begin_src sh :tangle yes
  ./foo_tunes.py -i=/Volumes/bebe/playlists/windows/ --verbose -o=temp8 --from_str='X:/music' --to_str='/Users/james/Music' --windows_to_posix --flac_ext_to_alac
#+end_src
* Test
#+begin_src sh :tangle yes
  python -m foo_tunes_test
#+end_src

* Random Foobar Notes
** Query Syntax
https://wiki.hydrogenaud.io/index.php?title=Foobar2000:Query_syntax
** How to create Autoplaylist?
https://hydrogenaud.io/index.php?topic=92694.0

#+begin_src text :tangle yes
  Library -> Album List -> (right click an album) -> Create Autoplaylist
#+end_src
** Changing Music Directory Path
For example, say the original media library was on J:/ and the new media library
is on X:/

#+begin_src text :tangle yes
Go to File -> Preferences -> Music Library -> Music Folders -> Add -> Add new Path.
#+end_src

Let Foobar2000 populate all the music files from the new path. There will be
duplicates until this whole process is finished. Once Foobar's music folder
status is 'Monitoring', Use Playlist Revive.

#+begin_src text :tangle yes
Go to each playlist -> Edit -> Revive Dead Items.
#+end_src

This should point all the paths to the new path at the new music directory
location.
** Rename Pattern
#+begin_src text :tangle yes
  %album artist% - %album%[ '('%date%')'] '['$if($strstr(%codec%,FLAC),FLAC,$if($strstr(%__codec_profile%,CBR),%__bitrate%,V0))']'/%tracknumber%. [%artist% - ]%title%
#+end_src
** Directory Style
#+begin_src text :tangle yes
  %genre%/%album artist%/%album%/%tracknumber% %title%
#+end_src

** Playback Statistics
Write statistics to file tags.
Import statistics from file tags.

This is for play count, rating, etc.

** Exporting all Playlists
#+begin_src text :tangle yes
  View -> Playlist Manager -> Right Click -> Save all Playlists -> m3u8

  There are a few entries for Playlist Manager, choose the last one.

  Save to: e.g. X:\playlists\windows
#+end_src
* Converting all FLAC to ALAC

1. Make all music directories follow: [[*Directory Style][Directory Style]].
2. Write all playback statistics to file tags.
3. Export all playlists and convert them to use .m4a extension endings.
4. Convert files in Foobar from FLAC to ALAC.
Right click -> Convert -> FLAC to ALAC
5. Import playlists with the m4a endings, delete original playlists.
File -> Load Playlist -> Select all Playlists

* Example Usage

Create script like below:

#+begin_src sh :tangle yes
#!/usr/local/bin/bash

PATH=/usr/local/bin

if ! tmux has-session -t footunes 2>/dev/null; then
    # https://stackoverflow.com/questions/25207909/tmux-open-terminal-failed-not-a-terminal
    tmux new-session -d -s footunes python /bebe/script/foo_tunes/foo_tunes.py \
         --jojo \
         --watch_sleep_time=30 \
         --watch_playlist_delay=30 \
         --watch_convert_delay=300 # Five minutes.
fi
#+end_src

In this example, this script is located at:

#+begin_src text :tangle yes
/bebe/script/foo_tunes/foo_tunes_tmux.sh
#+end_src

Set up crontab to automatically start up the script.

#+begin_src sh :tangle yes
$ sudo crontab -e
#+end_src

#+begin_src text :tangle yes
@reboot su james -c /bebe/script/foo_tunes/foo_tunes_tmux.sh >/bebe/script/foo_tunes/startup.log 2>&1
*/5 * * * * su james -c /bebe/script/foo_tunes/foo_tunes_tmux.sh >/bebe/script/foo_tunes/run.log 2>&1
#+end_src

#+begin_src sh :tangle yes
$ tmux attach # To attach and view script output.
#+end_src
